name: Format, Lint, Test, Build & Push to dist branch

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v3
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: 📦 Install dependencies
        run: npm ci
      - name: ♻️ Save cache after install
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ github.run_id }}

  format:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: ♻️ Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 📦 Install dependencies if cache missed
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: 🧹 Run format
        run: npm run format

  lint:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: ♻️ Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 📦 Install dependencies if cache missed
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: 🔍 Run lint
        run: npm run lint

  test:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: ♻️ Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 📦 Install dependencies if cache missed
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: 🧪 Run tests
        run: npm run test

  build:
    needs: [setup, format, lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: ♻️ Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 📦 Install dependencies if cache missed
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: 🔨 Build project
        run: npm run build

  push_dist:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: ♻️ Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 📦 Install dependencies if cache missed
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: 🔨 Build project
        run: npm run build
      - name: 📈 Bump version and prepare dist
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm version patch -m "Bump version to %s for dist" --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          git fetch origin
          git switch --orphan dist
          git reset --hard
          cp -r dist/* .
          cp package.json ./package.json
          rm -rf dist src .github node_modules package-lock.json
          git add .
          git commit -m "Build artifacts from main (version $VERSION)"
          git push --force origin dist

  publish:
    needs: [push_dist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dist
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
      - name: 🔍 Debug: Check package.json
        run: ls -la && cat package.json || echo "package.json not found"
      - name: 📤 Publish to npm with tag
        run: npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
